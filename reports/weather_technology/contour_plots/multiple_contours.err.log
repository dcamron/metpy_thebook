Traceback (most recent call last):
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/kgoebber/miniconda3/envs/metpy_book/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Set the plot time with forecast hours
plot_time = model_run_date + timedelta(hours=0)

# Set attributes for plotting geopotential height contours
hght = declarative.ContourPlot()
hght.data = ds
hght.field = 'Geopotential_height_isobaric'
hght.level = 850 * units.hPa
hght.time = plot_time
hght.contours = range(0, 10000, 60)
hght.clabels = True

# Set attributes for plotting temperature contours in Celsius
tmpc = declarative.ContourPlot()
tmpc.data = ds
tmpc.field = 'Geopotential_height_isobaric'
tmpc.level = 850 * units.hPa
tmpc.time = plot_time
tmpc.contours = range(-40, 41, 5)
tmpc.clabels = True
tmpc.linestyle = 'dashed'
tmpc.plot_units = 'degC'

# Add wind barbds
barbs = declarative.BarbPlot()
barbs.data = ds
barbs.time = plot_time
barbs.field = ['u-component_of_wind_isobaric',
               'v-component_of_wind_isobaric']
barbs.level = 850 * units.hPa
barbs.skip = (3, 3)
barbs.plot_units = 'knot'

# Set the attributes for the map
# and put the contours on the map
panel = declarative.MapPanel()
panel.area = [-125, -74, 22, 52]
panel.projection = 'lcc'
panel.layers = ['states', 'coastline', 'borders']
panel.title = f'500-hPa Geopotential Heights at {plot_time}'
panel.plots = [hght, tmpc, barbs]

# Set the attributes for the panel
# and put the panel in the figure
pc = declarative.PanelContainer()
pc.size = (15, 15)
pc.panels = [panel]

# Show the figure
pc.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mDimensionalityError[0m                       Traceback (most recent call last)
Cell [0;32mIn[3], line 50[0m
[1;32m     47[0m pc[38;5;241m.[39mpanels [38;5;241m=[39m [panel]
[1;32m     49[0m [38;5;66;03m# Show the figure[39;00m
[0;32m---> 50[0m [43mpc[49m[38;5;241;43m.[39;49m[43mshow[49m[43m([49m[43m)[49m

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:179[0m, in [0;36mPanelContainer.show[0;34m(self)[0m
[1;32m    177[0m [38;5;28;01mdef[39;00m [38;5;21mshow[39m([38;5;28mself[39m):
[1;32m    178[0m [38;5;250m    [39m[38;5;124;03m"""Show the constructed graphic on the screen."""[39;00m
[0;32m--> 179[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43m)[49m
[1;32m    180[0m     plt[38;5;241m.[39mshow()

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:166[0m, in [0;36mPanelContainer.draw[0;34m(self)[0m
[1;32m    164[0m [38;5;28;01mfor[39;00m panel [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mpanels:
[1;32m    165[0m     [38;5;28;01mwith[39;00m panel[38;5;241m.[39mhold_trait_notifications():
[0;32m--> 166[0m         [43mpanel[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43m)[49m

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:461[0m, in [0;36mMapPanel.draw[0;34m(self)[0m
[1;32m    459[0m [38;5;28;01mfor[39;00m p [38;5;129;01min[39;00m [38;5;28mself[39m[38;5;241m.[39mplots:
[1;32m    460[0m     [38;5;28;01mwith[39;00m p[38;5;241m.[39mhold_trait_notifications():
[0;32m--> 461[0m         [43mp[49m[38;5;241;43m.[39;49m[43mdraw[49m[43m([49m[43m)[49m
[1;32m    463[0m [38;5;66;03m# Add all of the maps[39;00m
[1;32m    464[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39mlayers) [38;5;241m>[39m [38;5;28mlen[39m([38;5;28mself[39m[38;5;241m.[39mlayers_edgecolor):

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:826[0m, in [0;36mPlotScalar.draw[0;34m(self)[0m
[1;32m    824[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_need_redraw:
[1;32m    825[0m     [38;5;28;01mif[39;00m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124m'[39m[38;5;124mhandle[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m) [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 826[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_build[49m[43m([49m[43m)[49m
[1;32m    827[0m     [38;5;28;01mif[39;00m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124m'[39m[38;5;124mcolorbar[39m[38;5;124m'[39m, [38;5;28;01mNone[39;00m) [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    828[0m         cbar [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mparent[38;5;241m.[39max[38;5;241m.[39mfigure[38;5;241m.[39mcolorbar(
[1;32m    829[0m             [38;5;28mself[39m[38;5;241m.[39mhandle, orientation[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mcolorbar, pad[38;5;241m=[39m[38;5;241m0[39m, aspect[38;5;241m=[39m[38;5;241m50[39m)

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:994[0m, in [0;36mContourPlot._build[0;34m(self)[0m
[1;32m    992[0m [38;5;28;01mdef[39;00m [38;5;21m_build[39m([38;5;28mself[39m):
[1;32m    993[0m [38;5;250m    [39m[38;5;124;03m"""Build the plot by calling any plotting methods as necessary."""[39;00m
[0;32m--> 994[0m     x_like, y_like, imdata [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mplotdata[49m
[1;32m    996[0m     kwargs [38;5;241m=[39m plot_kwargs(imdata)
[1;32m    998[0m     [38;5;28mself[39m[38;5;241m.[39mhandle [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mparent[38;5;241m.[39max[38;5;241m.[39mcontour(x_like, y_like, imdata, [38;5;28mself[39m[38;5;241m.[39mcontours,
[1;32m    999[0m                                          colors[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mlinecolor, linewidths[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mlinewidth,
[1;32m   1000[0m                                          linestyles[38;5;241m=[39m[38;5;28mself[39m[38;5;241m.[39mlinestyle, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:810[0m, in [0;36mPlotScalar.plotdata[0;34m(self)[0m
[1;32m    804[0m [38;5;250m[39m[38;5;124;03m"""Return the data for plotting.[39;00m
[1;32m    805[0m 
[1;32m    806[0m [38;5;124;03mThe two dimension coordinates and the data array.[39;00m
[1;32m    807[0m 
[1;32m    808[0m [38;5;124;03m"""[39;00m
[1;32m    809[0m [38;5;28;01mtry[39;00m:
[0;32m--> 810[0m     plot_x_dim [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mgriddata[49m[38;5;241m.[39mmetpy[38;5;241m.[39mfind_axis_number([38;5;124m'[39m[38;5;124mx[39m[38;5;124m'[39m)
[1;32m    811[0m     plot_y_dim [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39mgriddata[38;5;241m.[39mmetpy[38;5;241m.[39mfind_axis_number([38;5;124m'[39m[38;5;124my[39m[38;5;124m'[39m)
[1;32m    812[0m [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/plots/declarative.py:783[0m, in [0;36mPlotScalar.griddata[0;34m(self)[0m
[1;32m    781[0m [38;5;66;03m# Handle unit conversion (both direct unit specification and scaling)[39;00m
[1;32m    782[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mplot_units [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[0;32m--> 783[0m     data_subset [38;5;241m=[39m [43mdata_subset[49m[38;5;241;43m.[39;49m[43mmetpy[49m[38;5;241;43m.[39;49m[43mconvert_units[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mplot_units[49m[43m)[49m
[1;32m    785[0m [38;5;66;03m# Handle smoothing of data[39;00m
[1;32m    786[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39msmooth_field [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/metpy/xarray.py:181[0m, in [0;36mMetPyDataArrayAccessor.convert_units[0;34m(self, units)[0m
[1;32m    167[0m [38;5;28;01mdef[39;00m [38;5;21mconvert_units[39m([38;5;28mself[39m, units):
[1;32m    168[0m [38;5;250m    [39m[38;5;124;03m"""Return new DataArray with values converted to different units.[39;00m
[1;32m    169[0m 
[1;32m    170[0m [38;5;124;03m    See Also[39;00m
[0;32m   (...)[0m
[1;32m    179[0m 
[1;32m    180[0m [38;5;124;03m    """[39;00m
[0;32m--> 181[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mquantify()[38;5;241m.[39mcopy(data[38;5;241m=[39m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43munit_array[49m[38;5;241;43m.[39;49m[43mto[49m[43m([49m[43munits[49m[43m)[49m)

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/pint/facets/plain/quantity.py:528[0m, in [0;36mPlainQuantity.to[0;34m(self, other, *contexts, **ctx_kwargs)[0m
[1;32m    511[0m [38;5;250m[39m[38;5;124;03m"""Return PlainQuantity rescaled to different units.[39;00m
[1;32m    512[0m 
[1;32m    513[0m [38;5;124;03mParameters[39;00m
[0;32m   (...)[0m
[1;32m    524[0m [38;5;124;03mpint.PlainQuantity[39;00m
[1;32m    525[0m [38;5;124;03m"""[39;00m
[1;32m    526[0m other [38;5;241m=[39m to_units_container(other, [38;5;28mself[39m[38;5;241m.[39m_REGISTRY)
[0;32m--> 528[0m magnitude [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_convert_magnitude_not_inplace[49m[43m([49m[43mother[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43mcontexts[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mctx_kwargs[49m[43m)[49m
[1;32m    530[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m(magnitude, other)

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/pint/facets/plain/quantity.py:477[0m, in [0;36mPlainQuantity._convert_magnitude_not_inplace[0;34m(self, other, *contexts, **ctx_kwargs)[0m
[1;32m    474[0m     [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39m_REGISTRY[38;5;241m.[39mcontext([38;5;241m*[39mcontexts, [38;5;241m*[39m[38;5;241m*[39mctx_kwargs):
[1;32m    475[0m         [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_REGISTRY[38;5;241m.[39mconvert([38;5;28mself[39m[38;5;241m.[39m_magnitude, [38;5;28mself[39m[38;5;241m.[39m_units, other)
[0;32m--> 477[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_REGISTRY[49m[38;5;241;43m.[39;49m[43mconvert[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_magnitude[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_units[49m[43m,[49m[43m [49m[43mother[49m[43m)[49m

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/pint/facets/plain/registry.py:922[0m, in [0;36mPlainRegistry.convert[0;34m(self, value, src, dst, inplace)[0m
[1;32m    919[0m [38;5;28;01mif[39;00m src [38;5;241m==[39m dst:
[1;32m    920[0m     [38;5;28;01mreturn[39;00m value
[0;32m--> 922[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_convert[49m[43m([49m[43mvalue[49m[43m,[49m[43m [49m[43msrc[49m[43m,[49m[43m [49m[43mdst[49m[43m,[49m[43m [49m[43minplace[49m[43m)[49m

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/pint/facets/context/registry.py:392[0m, in [0;36mContextRegistry._convert[0;34m(self, value, src, dst, inplace)[0m
[1;32m    388[0m             src [38;5;241m=[39m [38;5;28mself[39m[38;5;241m.[39m_active_ctx[38;5;241m.[39mtransform(a, b, [38;5;28mself[39m, src)
[1;32m    390[0m         value, src [38;5;241m=[39m src[38;5;241m.[39m_magnitude, src[38;5;241m.[39m_units
[0;32m--> 392[0m [38;5;28;01mreturn[39;00m [38;5;28;43msuper[39;49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43m_convert[49m[43m([49m[43mvalue[49m[43m,[49m[43m [49m[43msrc[49m[43m,[49m[43m [49m[43mdst[49m[43m,[49m[43m [49m[43minplace[49m[43m)[49m

File [0;32m~/miniconda3/envs/metpy_book/lib/python3.11/site-packages/pint/facets/nonmultiplicative/registry.py:213[0m, in [0;36mNonMultiplicativeRegistry._convert[0;34m(self, value, src, dst, inplace)[0m
[1;32m    210[0m [38;5;66;03m# If the source and destination dimensionality are different,[39;00m
[1;32m    211[0m [38;5;66;03m# then the conversion cannot be performed.[39;00m
[1;32m    212[0m [38;5;28;01mif[39;00m src_dim [38;5;241m!=[39m dst_dim:
[0;32m--> 213[0m     [38;5;28;01mraise[39;00m DimensionalityError(src, dst, src_dim, dst_dim)
[1;32m    215[0m [38;5;66;03m# clean src from offset units by converting to reference[39;00m
[1;32m    216[0m [38;5;28;01mif[39;00m src_offset_unit:

[0;31mDimensionalityError[0m: Cannot convert from 'meter' ([length]) to 'degree_Celsius' ([temperature])

